{# Hérite de la vue parente situé app/Resources/views/base.html.twig #}
{% extends "::base.html.twig" %}

{% block body %}
{# Partie Saisie Oiseau #}
<div id="saisieOiseau" class="part">
	<div class="container">
		<h2 class="text-center">SAISIR UNE OBSERVATION D'OISEAU</h2>
		<hr>	

		{% for message in app.session.flashbag.get('good') %}
			<div class="alert alert-success">
		    	<p>{{ message }}</p>
		    </div>
		{% endfor %}
		{# Formulaire de saisie d'observation #}
		{# Le formulaire sera soumis au contrôleur ObservationController #}
		<form method="post" enctype="multipart/form-data">
	    	{{ form_errors(form) }}

			<div class="row">
				<div class="col-sm-12 col-md-2">
					{{ form_row(form.dateObservation) }}
				</div>

				<div class="col-sm-12 col-md-2">
					{{ form_label(form.heureObservation, 'Heure') }}
			        {{ form_widget(form.heureObservation) }}
			        {{ form_errors(form.heureObservation) }}
		    	</div>

				<div class="col-sm-12 col-md-3">
					{{ form_label(form.latitude, 'Latitude') }}
			        {{ form_widget(form.latitude) }}
			        {{ form_errors(form.latitude) }}
	    		</div>

				<div class="col-sm-12 col-md-3">
					{{ form_label(form.longitude, 'Longitude') }}
			        {{ form_widget(form.longitude) }}
			        {{ form_errors(form.longitude) }}
				</div>

				<div class="col-sm-12 col-md-2">
					{{ form_label(form.nbIndividus, "Nombre d'individus") }}
			        {{ form_widget(form.nbIndividus) }}
			        {{ form_errors(form.nbIndividus) }}
	    		</div>
			</div>

			{# Intégration googlemap ici #}
			<div class="row">
				<div id="map" class="col-xs-12 map"></div>					
			</div>
			
			{# Barre de recherche d'oiseau ici #}

			{# Photo #}
			<div class="row" id="rowPhoto">
				<div class="col-md-offset-5 col-md-3 input-file-container">
					{{ form_label(form.photo, "Photo (facultatif, format png)") }}
					{{ form_widget(form.photo) }}
			        {{ form_errors(form.photo) }}
		          	<label for="my-file" class="input-file-trigger" tabindex="0">
		          		<i class="fa fa-picture-o fa-5x" aria-hidden="true"></i>
		          	</label>
		          	<p class="file-return"></p>
	    		</div>	
			</div>

			<div class="row">
				<div class="col-xs-12">
					{{ form_label(form.commentaire, "Commentaire") }}
			        {{ form_widget(form.commentaire) }}
			        {{ form_errors(form.commentaire) }}
		    	</div>		
			</div>

	        {{ form_rest(form) }}
			<div class="row text-center">
				<div class="col-xs-12">
	        		<input type="submit" value="Envoyer la saisie" class="btn btn-success btn-lg" />
		    	</div>
			</div>
    	</form>
	</div>
</div>

<script>
	$(function() {
		// Ajoute un calendrier
		$('#portail_webbundle_observations_dateObservation').datepicker({
			//format de la date
			dateFormat: 'dd-mm-yy',
			//pour changer le mois et l'année plus facilement
			changeMonth: true,
  			changeYear: true,
  			//interdiction de sélectionner une date future ou une date supérieur à un an en arrière
  			minDate: '-1Y',
  			maxDate: '0',
		});


		var dt = new Date();
		var day = dt.getDate();
		var month = ("0" + (dt.getMonth() + 1)).slice(-2);
		var year = dt.getFullYear();

		//Utilise la date actuelle comme date par défaut dans le select
		$('#portail_webbundle_observations_dateObservation').val(day + "-" + month + "-" + year);

		//Utilise l'heure actuelle comme heure par défaut dans le select
		var hour = dt.getHours();
		var minute = dt.getMinutes();
		$('#portail_webbundle_observations_heureObservation_hour').val(hour);
		$('#portail_webbundle_observations_heureObservation_minute').val(minute);


		//Photo
		var fileInput  = document.querySelector( ".input-file-container input[type='file']" ),  
    		button     = document.querySelector( ".input-file-trigger" ),
    		the_return = document.querySelector(".file-return");
 
		// action lorsque la "barre d'espace" ou "Entrée" est pressée
		button.addEventListener( "keydown", function( event ) {
		    if ( event.keyCode == 13 || event.keyCode == 32 ) {
		        fileInput.focus();
		    }
		});
		 
		// action lorsque le label est cliqué
		button.addEventListener( "click", function( event ) {
		   fileInput.focus();
		   return false;
		});
		 
		// affiche un retour visuel dès que input:file change
		fileInput.addEventListener( "change", function( event ) {  
		    the_return.innerHTML = this.value;  
		});

		$(".input-file-trigger").click(function() {
    		$("#portail_webbundle_observations_photo").click();
		});


		// Googlemap
		// navigator.geolocation permet de récupérer la position d'un utilisateur
		if(navigator.geolocation) {
	  		navigator.geolocation.getCurrentPosition(function(position) {
	  			// Valeur par défaut de la carte
				var myOptions = {
			    zoom: 14, //Plus le zoom est élevé plus la carte est rapproché
			    //Position par défaut de la carte : celle de l'utilisateur
			    center: new google.maps.LatLng(position.coords.latitude, position.coords.longitude),
			    disableDefaultUI: true,
			    scaleControl: true, //Affiche les informations sur l'échelle de distance 
			    zoomControl: true, //Autorise le zoom avec la molette
			    zoomControlOptions: {
			      style: google.maps.ZoomControlStyle.HYBRID
			    },
			    mapTypeId: 'hybrid',
			    draggableCursor:'crosshair', //Remplace la main par une croix pour mieux cibler
			    draggingCursor: 'move'
			}

			//Crée la carte google map et appelle la fonction myOptions pour définir les valeurs par défaut au démarrage
			var map = new google.maps.Map(document.getElementById("map"),myOptions);
			//marqueur
			var marker;
			//Icône de l'oiseau qui fera office de marqueur
			var locator = "{{ asset('images/locator.png') }}"; 
			//Au clic sur un endroit de la carte
			google.maps.event.addListener(map, 'click', function(event) {
				//Récupère la position du clic et crée un marqueur
				placeMarker(event.latLng.lat(), event.latLng.lng());
				//Affecte aux champs Latitude et longitude les coordonnées sur lesquelles la personne a cliqué
				document.getElementById("portail_webbundle_observations_latitude").value = event.latLng.lat();
				document.getElementById("portail_webbundle_observations_longitude").value = event.latLng.lng();
			});
			//Fonction qui crée un marqueur
			function placeMarker(latitude, longitude) {
				//On autorise qu'un marqueur à la fois
				if (marker) {
					marker.setPosition({lat: latitude, lng: longitude});
				} else {
					marker = new google.maps.Marker({
						position: {lat: latitude, lng: longitude},
						map: map,
						icon: locator,
					});
				}
			}
	  		});
		}
	});
</script>
{% endblock %}